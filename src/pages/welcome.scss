// $baseline: 1.5rem;

// $minScreen: 20rem;
// $maxScreen: 50rem;
// $minFont: .8rem;
// $maxFont: 2rem;

// $font: 2rem;

$baseline: 3rem;

$minScreen: 50rem;
$maxScreen: 125rem;
$minFont: 2rem;
$maxFont: 5rem;

$font: 5rem;

@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
	& {
		@each $property in $properties {
			#{$property}: $min-value;
		}

		@media screen and (min-width: $min-vw) {
			@each $property in $properties {
				#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
		}

		@media screen and (min-width: $max-vw) {
			@each $property in $properties {
				#{$property}: $max-value;
			}
		}
	}
}

@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}

.mainly{
	@include fluid-type(font-size, $minScreen, $maxScreen, $minFont, $maxFont);
	margin-bottom: calc((#{$baseline} - $font) + #{$baseline});
	font-size: $font;
	line-height: $font;
	margin-top: 0.4em;

	line-height: 1.7;
  	letter-spacing: 0.1em;
  	text-indent: 0.2em;
	padding: 0.2em;
	color: #1c1c1c;
}

.separator {
	@include fluid-type(font-size, $minScreen, $maxScreen, $minFont, $maxFont);
	margin-bottom: calc((#{$baseline} - $font) + #{$baseline});
	font-size: $font;
	line-height: $font;
	margin-top: calc((#{$baseline} - $font)  + #{$baseline});
	// font-size: 3em;
  }

.container-parent {
	display: flex;
	justify-content: center;
	align-items: center; 
	gap: 1em;
	flex-wrap: wrap;
	margin-bottom: 8em;
  }
  
.mainly span {
	  padding: 0.2em;
  }
  
.mainly> :first-child {
	background-color: #57d25c;
	color: #1c1c1c;
  }
  
.mainly> :nth-child(3) {
	background-color: #de4bdc;
	color: #1c1c1c;
  }
  
.mainly> :last-child {
	background-color: #1c1c1c;
	color: #f8f8f8;
  }
    
.break {
	flex-basis: 100%;
	height: 0;
  }


  @media screen and (max-width: 440px) {
	// $baseline: 1.5rem;

	// $minScreen: 20rem;
	// $maxScreen: 50rem;
	// $minFont: .8rem;
	// $maxFont: 2rem;

	// $font: 2rem;

	$baseline: 2.25rem;

	$minScreen: 30rem;
	$maxScreen: 75rem;
	$minFont: 1.2rem;
	$maxFont: 3rem;
	
	$font: 3rem;

	// $baseline: 3rem;

	// $minScreen: 50rem;
	// $maxScreen: 125rem;
	// $minFont: 2rem;
	// $maxFont: 5rem;

	// $font: 5rem;

	@mixin fluid-type($properties, $min-vw, $max-vw, $min-value, $max-value) {
		& {
			@each $property in $properties {
				#{$property}: $min-value;
			}

			@media screen and (min-width: $min-vw) {
				@each $property in $properties {
					#{$property}: calc(#{$min-value} + #{strip-unit($max-value - $min-value)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
				}
			}

			@media screen and (min-width: $max-vw) {
				@each $property in $properties {
					#{$property}: $max-value;
				}
			}
		}
	}

	@function strip-unit($value) {
		@return $value / ($value * 0 + 1);
	}

	.mainly{
		@include fluid-type(font-size, $minScreen, $maxScreen, $minFont, $maxFont);
		margin-bottom: calc((#{$baseline} - $font) + #{$baseline});
		font-size: $font;
		line-height: $font;
		margin-top: 0.4em;

		line-height: 1.7;
		letter-spacing: 0.1em;
		text-indent: 0.2em;
		padding: 0.2em;
		color: #1c1c1c;
	}

	.separator {
		@include fluid-type(font-size, $minScreen, $maxScreen, $minFont, $maxFont);
		margin-bottom: calc((#{$baseline} - $font) + #{$baseline});
		font-size: $font;
		line-height: $font;
		margin-top: calc((#{$baseline} - $font)  + #{$baseline});
		// font-size: 3em;
	}

	.container-parent {
		display: flex;
		justify-content: center;
		align-items: center; 
		gap: 1em;
		flex-wrap: wrap;
		margin-bottom: 8em;
	}
	
	.mainly span {
		padding: 0.2em;
	}
	
	.mainly> :first-child {
		background-color: #57d25c;
		color: #1c1c1c;
	}
	
	.mainly> :nth-child(3) {
		background-color: #de4bdc;
		color: #1c1c1c;
	}
	
	.mainly> :last-child {
		background-color: #1c1c1c;
		color: #f8f8f8;
	}
		
	.break {
		flex-basis: 100%;
		height: 0;
	}
  }